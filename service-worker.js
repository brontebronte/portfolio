"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","cc4f6e30923d35810779fa3e639ad6eb"],["/static/css/main.b494cbe2.css","ccae91bcd061b02d83143181040f1f38"],["/static/js/main.404c4887.js","0304af38d173446154af30c3499c1172"],["/static/media/about_arrow.6e03fd82.svg","6e03fd82cd36d89ed457a165a6c9bb0c"],["/static/media/arrow.2deb2c86.svg","2deb2c862c7f50c1f834d04e0fe83caa"],["/static/media/cloud-lower.a81d7442.png","a81d7442f76da5195f53b5e16eee3fe0"],["/static/media/cloud-middle.03911a36.png","03911a367f6cec46104cbea39a48da30"],["/static/media/cloud-top.8a54d423.png","8a54d4232f9bf3eebf6308a5fccf6516"],["/static/media/fish_blue.3ee079d4.svg","3ee079d43eb832f214e67c38bded4e42"],["/static/media/fish_bone.302af1fd.svg","302af1fd2911072ea5f6af740ad1781c"],["/static/media/gamearcade.b4e672e3.png","b4e672e358bc3471182e217099409a74"],["/static/media/glasses.a52a939e.svg","a52a939eb21de10cf2c1eeec05122372"],["/static/media/googlemap.4164e05b.png","4164e05be96c2e749f5c37806af5ae5d"],["/static/media/hands.18ae48c0.svg","18ae48c0531a73ae8543fe399425b264"],["/static/media/jasmine.3f0fc9b6.png","3f0fc9b65e05ee13df798d47d0cbc762"],["/static/media/light.9dc4ea5b.svg","9dc4ea5b9b48c15b5acdda031e1d36c9"],["/static/media/logo.aabf3d4b.svg","aabf3d4bd559e4e3d796c199b607e838"],["/static/media/menu_character.e4f35a08.svg","e4f35a08254e1b96b148018bcdb7a1ca"],["/static/media/plate.ab99818a.svg","ab99818a191478db160b4aa1a3b4f29f"],["/static/media/postbox.7b15381c.svg","7b15381cdd44c7215d682411c5c78389"],["/static/media/skill_logo.51f7c220.png","51f7c22077df72b2d3948e253c00a54e"],["/static/media/sparkleone.f273c946.png","f273c9462488b8bb0e82981344724742"],["/static/media/sparkletwo.5012def1.png","5012def1e93570d0c8d12d37bf120a6c"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});